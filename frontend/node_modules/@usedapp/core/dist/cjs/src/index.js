"use strict";
// NOTE: We explicitly export the symbols in the root index.ts file to have better control over package's public API.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useTokenBalance = exports.useTokenAllowance = exports.useToken = exports.useSendTransaction = exports.useNotifications = exports.useMulticallAddress = exports.useLookupAddress = exports.useGasPrice = exports.useEthers = exports.useEtherBalance = exports.useContractFunction = exports.useChainState = exports.useChainMeta = exports.useChainCalls = exports.useChainCall = exports.useContractCalls = exports.useContractCall = exports.useUpdateConfig = exports.useConfig = exports.useCalls = exports.useCall = exports.useBlockNumbers = exports.useBlockNumber = exports.useRawLogs = exports.useLogs = exports.useBlockMeta = exports.useConnector = exports.multicall2 = exports.multicall = exports.getStoredTransactionState = exports.DAppProvider = exports.TestBUSD = exports.TestBNB = exports.NATIVE_CURRENCY = exports.MultiCallABI = exports.MultiCall2ABI = exports.MultiCall2 = exports.MultiCall = exports.KovanEther = exports.KovanDai = exports.Ether = exports.ERC20MockInterface = exports.ERC20Mock = exports.ERC20Interface = exports.ERC20 = exports.Dai = exports.DEFAULT_SUPPORTED_CHAINS = exports.BUSD = exports.BNB = exports.ChainId = void 0;
exports.CoinbaseWalletConnector = exports.InjectedConnector = exports.MetamaskConnector = exports.ConnectorEvent = exports.getExplorerTransactionLink = exports.getExplorerAddressLink = exports.getChainName = exports.shortenTransactionHash = exports.shortenIfTransactionHash = exports.shortenIfAddress = exports.shortenAddress = exports.compareAddress = exports.addressEqual = exports.isTestChain = exports.isLocalChain = exports.transactionErrored = exports.Token = exports.NativeCurrency = exports.FiatCurrency = exports.CurrencyValue = exports.Currency = exports.useSigner = exports.useResolveName = exports.useRawCalls = exports.useRawCall = exports.useTransactions = exports.useTokenList = void 0;
var constants_1 = require("./constants");
Object.defineProperty(exports, "ChainId", { enumerable: true, get: function () { return constants_1.ChainId; } });
Object.defineProperty(exports, "BNB", { enumerable: true, get: function () { return constants_1.BNB; } });
Object.defineProperty(exports, "BUSD", { enumerable: true, get: function () { return constants_1.BUSD; } });
Object.defineProperty(exports, "DEFAULT_SUPPORTED_CHAINS", { enumerable: true, get: function () { return constants_1.DEFAULT_SUPPORTED_CHAINS; } });
Object.defineProperty(exports, "Dai", { enumerable: true, get: function () { return constants_1.Dai; } });
Object.defineProperty(exports, "ERC20", { enumerable: true, get: function () { return constants_1.ERC20; } });
Object.defineProperty(exports, "ERC20Interface", { enumerable: true, get: function () { return constants_1.ERC20Interface; } });
Object.defineProperty(exports, "ERC20Mock", { enumerable: true, get: function () { return constants_1.ERC20Mock; } });
Object.defineProperty(exports, "ERC20MockInterface", { enumerable: true, get: function () { return constants_1.ERC20MockInterface; } });
Object.defineProperty(exports, "Ether", { enumerable: true, get: function () { return constants_1.Ether; } });
Object.defineProperty(exports, "KovanDai", { enumerable: true, get: function () { return constants_1.KovanDai; } });
Object.defineProperty(exports, "KovanEther", { enumerable: true, get: function () { return constants_1.KovanEther; } });
Object.defineProperty(exports, "MultiCall", { enumerable: true, get: function () { return constants_1.MultiCall; } });
Object.defineProperty(exports, "MultiCall2", { enumerable: true, get: function () { return constants_1.MultiCall2; } });
Object.defineProperty(exports, "MultiCall2ABI", { enumerable: true, get: function () { return constants_1.MultiCall2ABI; } });
Object.defineProperty(exports, "MultiCallABI", { enumerable: true, get: function () { return constants_1.MultiCallABI; } });
Object.defineProperty(exports, "NATIVE_CURRENCY", { enumerable: true, get: function () { return constants_1.NATIVE_CURRENCY; } });
Object.defineProperty(exports, "TestBNB", { enumerable: true, get: function () { return constants_1.TestBNB; } });
Object.defineProperty(exports, "TestBUSD", { enumerable: true, get: function () { return constants_1.TestBUSD; } });
var providers_1 = require("./providers");
Object.defineProperty(exports, "DAppProvider", { enumerable: true, get: function () { return providers_1.DAppProvider; } });
Object.defineProperty(exports, "getStoredTransactionState", { enumerable: true, get: function () { return providers_1.getStoredTransactionState; } });
Object.defineProperty(exports, "multicall", { enumerable: true, get: function () { return providers_1.multicall; } });
Object.defineProperty(exports, "multicall2", { enumerable: true, get: function () { return providers_1.multicall2; } });
Object.defineProperty(exports, "useConnector", { enumerable: true, get: function () { return providers_1.useConnector; } });
var hooks_1 = require("./hooks");
Object.defineProperty(exports, "useBlockMeta", { enumerable: true, get: function () { return hooks_1.useBlockMeta; } });
Object.defineProperty(exports, "useLogs", { enumerable: true, get: function () { return hooks_1.useLogs; } });
Object.defineProperty(exports, "useRawLogs", { enumerable: true, get: function () { return hooks_1.useRawLogs; } });
Object.defineProperty(exports, "useBlockNumber", { enumerable: true, get: function () { return hooks_1.useBlockNumber; } });
Object.defineProperty(exports, "useBlockNumbers", { enumerable: true, get: function () { return hooks_1.useBlockNumbers; } });
Object.defineProperty(exports, "useCall", { enumerable: true, get: function () { return hooks_1.useCall; } });
Object.defineProperty(exports, "useCalls", { enumerable: true, get: function () { return hooks_1.useCalls; } });
Object.defineProperty(exports, "useConfig", { enumerable: true, get: function () { return hooks_1.useConfig; } });
Object.defineProperty(exports, "useUpdateConfig", { enumerable: true, get: function () { return hooks_1.useUpdateConfig; } });
Object.defineProperty(exports, "useContractCall", { enumerable: true, get: function () { return hooks_1.useContractCall; } });
Object.defineProperty(exports, "useContractCalls", { enumerable: true, get: function () { return hooks_1.useContractCalls; } });
Object.defineProperty(exports, "useChainCall", { enumerable: true, get: function () { return hooks_1.useChainCall; } });
Object.defineProperty(exports, "useChainCalls", { enumerable: true, get: function () { return hooks_1.useChainCalls; } });
Object.defineProperty(exports, "useChainMeta", { enumerable: true, get: function () { return hooks_1.useChainMeta; } });
Object.defineProperty(exports, "useChainState", { enumerable: true, get: function () { return hooks_1.useChainState; } });
Object.defineProperty(exports, "useContractFunction", { enumerable: true, get: function () { return hooks_1.useContractFunction; } });
Object.defineProperty(exports, "useEtherBalance", { enumerable: true, get: function () { return hooks_1.useEtherBalance; } });
Object.defineProperty(exports, "useEthers", { enumerable: true, get: function () { return hooks_1.useEthers; } });
Object.defineProperty(exports, "useGasPrice", { enumerable: true, get: function () { return hooks_1.useGasPrice; } });
Object.defineProperty(exports, "useLookupAddress", { enumerable: true, get: function () { return hooks_1.useLookupAddress; } });
Object.defineProperty(exports, "useMulticallAddress", { enumerable: true, get: function () { return hooks_1.useMulticallAddress; } });
Object.defineProperty(exports, "useNotifications", { enumerable: true, get: function () { return hooks_1.useNotifications; } });
Object.defineProperty(exports, "useSendTransaction", { enumerable: true, get: function () { return hooks_1.useSendTransaction; } });
Object.defineProperty(exports, "useToken", { enumerable: true, get: function () { return hooks_1.useToken; } });
Object.defineProperty(exports, "useTokenAllowance", { enumerable: true, get: function () { return hooks_1.useTokenAllowance; } });
Object.defineProperty(exports, "useTokenBalance", { enumerable: true, get: function () { return hooks_1.useTokenBalance; } });
Object.defineProperty(exports, "useTokenList", { enumerable: true, get: function () { return hooks_1.useTokenList; } });
Object.defineProperty(exports, "useTransactions", { enumerable: true, get: function () { return hooks_1.useTransactions; } });
Object.defineProperty(exports, "useRawCall", { enumerable: true, get: function () { return hooks_1.useRawCall; } });
Object.defineProperty(exports, "useRawCalls", { enumerable: true, get: function () { return hooks_1.useRawCalls; } });
Object.defineProperty(exports, "useResolveName", { enumerable: true, get: function () { return hooks_1.useResolveName; } });
Object.defineProperty(exports, "useSigner", { enumerable: true, get: function () { return hooks_1.useSigner; } });
var model_1 = require("./model");
Object.defineProperty(exports, "Currency", { enumerable: true, get: function () { return model_1.Currency; } });
Object.defineProperty(exports, "CurrencyValue", { enumerable: true, get: function () { return model_1.CurrencyValue; } });
Object.defineProperty(exports, "FiatCurrency", { enumerable: true, get: function () { return model_1.FiatCurrency; } });
Object.defineProperty(exports, "NativeCurrency", { enumerable: true, get: function () { return model_1.NativeCurrency; } });
Object.defineProperty(exports, "Token", { enumerable: true, get: function () { return model_1.Token; } });
Object.defineProperty(exports, "transactionErrored", { enumerable: true, get: function () { return model_1.transactionErrored; } });
__exportStar(require("./model/chain"), exports);
var helpers_1 = require("./helpers");
Object.defineProperty(exports, "isLocalChain", { enumerable: true, get: function () { return helpers_1.isLocalChain; } });
Object.defineProperty(exports, "isTestChain", { enumerable: true, get: function () { return helpers_1.isTestChain; } });
Object.defineProperty(exports, "addressEqual", { enumerable: true, get: function () { return helpers_1.addressEqual; } });
Object.defineProperty(exports, "compareAddress", { enumerable: true, get: function () { return helpers_1.compareAddress; } });
Object.defineProperty(exports, "shortenAddress", { enumerable: true, get: function () { return helpers_1.shortenAddress; } });
Object.defineProperty(exports, "shortenIfAddress", { enumerable: true, get: function () { return helpers_1.shortenIfAddress; } });
Object.defineProperty(exports, "shortenIfTransactionHash", { enumerable: true, get: function () { return helpers_1.shortenIfTransactionHash; } });
Object.defineProperty(exports, "shortenTransactionHash", { enumerable: true, get: function () { return helpers_1.shortenTransactionHash; } });
Object.defineProperty(exports, "getChainName", { enumerable: true, get: function () { return helpers_1.getChainName; } });
Object.defineProperty(exports, "getExplorerAddressLink", { enumerable: true, get: function () { return helpers_1.getExplorerAddressLink; } });
Object.defineProperty(exports, "getExplorerTransactionLink", { enumerable: true, get: function () { return helpers_1.getExplorerTransactionLink; } });
Object.defineProperty(exports, "ConnectorEvent", { enumerable: true, get: function () { return helpers_1.Event; } });
var metamask_1 = require("./providers/network/connectors/implementations/metamask");
Object.defineProperty(exports, "MetamaskConnector", { enumerable: true, get: function () { return metamask_1.MetamaskConnector; } });
var injected_1 = require("./providers/network/connectors/implementations/injected");
Object.defineProperty(exports, "InjectedConnector", { enumerable: true, get: function () { return injected_1.InjectedConnector; } });
var coinbase_1 = require("./providers/network/connectors/implementations/coinbase");
Object.defineProperty(exports, "CoinbaseWalletConnector", { enumerable: true, get: function () { return coinbase_1.CoinbaseWalletConnector; } });
//# sourceMappingURL=index.js.map